/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.3/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'

    // init setup
    id 'com.bmuschko.clover' version '2.2.3'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:28.2-jre'

    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
//    testImplementation 'junit:junit:4.12'
//    testImplementation 'org.mockito:mockito-core:3+'
    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.0'

    // init setup
//    compile 'org.json:json:20180813'
    clover 'org.openclover:clover:4.3.1'
  
}

application {
    // Define the main class for the application.
    mainClassName = 'edu.duke.group4.RISK.App'
}

test {
    // Use junit platform for unit tests
    useJUnitPlatform()
}
test {
  testLogging {
     showStandardStreams = true
     exceptionFormat = 'full'
  }
}
clover {
  report{
    xml= true
    html = true
  }
}

tasks.withType(JavaCompile) {
 options.debug = true
}
task resolveDependencies {
   doLast {
       project.rootProject.allprojects.each { subProject ->
           subProject.buildscript.configurations.each { configuration->
              if(configuration.canBeResolved) {
                 configuration.resolve()
              }
           }
           subProject.configurations.each { configuration ->
              if(configuration.canBeResolved) {
                 configuration.resolve()
              }
           }
       }
   }
}

